<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on The Ramblings of Jimmy Zelinskie</title>
    <link>https://jzelinskie.com/tags/linux/</link>
    <description>Recent content in linux on The Ramblings of Jimmy Zelinskie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 May 2018 00:00:00 -0400</lastBuildDate>
    
	<atom:link href="https://jzelinskie.com/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>You&#39;re not running vanilla Kubernetes</title>
      <link>https://jzelinskie.com/posts/youre-not-running-vanilla-kubernetes/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 -0400</pubDate>
      
      <guid>https://jzelinskie.com/posts/youre-not-running-vanilla-kubernetes/</guid>
      <description>Stop pretending it isn&amp;rsquo;t your own clumsy distribution. Seriously.
 Haven&amp;rsquo;t heard of &amp;ldquo;vanilla Kubernetes&amp;rdquo;? In the ever competitive age of selling Kubernetes, there seems to be a trend towards promising vendor neutrality. After all, the promise of Kubernetes is to free you from the tyranny of your cloud provider, right? It&amp;rsquo;s only natural that the mentality of avoiding lock-in be applied to Kubernetes itself. The community has arrived on the colloquial term &amp;ldquo;vanilla Kubernetes&amp;rdquo; to describe an installation of the only the upstream components as released by the Kubernetes project.</description>
    </item>
    
  </channel>
</rss>